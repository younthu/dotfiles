# Aliyun gemsource
source 'http://mirrors.aliyun.com/rubygems/'

# Add column to table
class AddEmailToUsers < ActiveRecord::Migration[5.0]
  def change
    add_column :users, :email, :string
  end
end

# roll back migration
rake db:rollback STEP=1

# run ruby code in rails env
rails runner "User.create!(email: 'test@ruby.com', password: 'password')"

# 创建API项目, 跳过测试(-T), 用postgresql做数据库(-d)
Rails new my-app-api --api -T -d postgresql

# 可以用runner直接跑console里面的脚本
rails runner -e development 'Platform::Procedure.where("created_at > ?", 1.day.ago).destroy_all'

# 直接渲染views/下指定目录的指定文件
render "home/cn.privacy"

# 跳过模板直接渲染视图文件
render layout:false

# 域名判断
request.host.include?('mergerintel')

# 渲染json，带http status code
render json: {message: "账号无法登陆，请联系客服XXXXXXXXXXX"}, status: 401

# 同时定义class, member method, active_support扩展
mattr_accessor :metho1 # Class.method1, Class.new.method1

# 继承自一个自定义字符串类
class DeviseController < Devise.parent_controller.constantize

# 查看父类
DeviseController.ancestors
DeviseController.ancestors.include? ApplicationController

# <a> with delete 
1. link_to "delete", "foobar/delete", :method => 'delete'
或者
<a href="foobar/delete" data-method="delete" rel="nofollow">delete</a>
2. require ujs
  1. 在application.js里面 //= require jquery_ujs
  2. 或者在erb里面, <%= javascript_include_tag 'jquery_ujs' %>

# 查找对象
user = User.find 9884
users = User.find 9884,9885

# mailers preview路径
http://localhost:3000/rails/mailers
http://localhost:3000/rails/info/routes  # 查看所有routes,不包含magic routes

# format time
time = Time.now                     # => Thu Jan 18 06:10:17 CST 2007

time.to_formatted_s(:time)          # => "06:10"
time.to_s(:time)                    # => "06:10"

time.to_formatted_s(:db)            # => "2007-01-18 06:10:17"
time.to_formatted_s(:number)        # => "20070118061017"
time.to_formatted_s(:short)         # => "18 Jan 06:10"
time.to_formatted_s(:long)          # => "January 18, 2007 06:10"
time.to_formatted_s(:long_ordinal)  # => "January 18th, 2007 06:10"
time.to_formatted_s(:rfc822)        # => "Thu, 18 Jan 2007 06:10:17 -0600"

"%02d %02d" % [2, 4] # => "02 04"

# send csv with BOM
# document.rb

  def self.to_csv
    attributes = %w{id doc_name standard_number proposed_by_name edited_by_name background_description author_name }

    CSV.generate("\uFEFF", headers: true) do |csv|
      csv << ["编号", "体系文件名称", "标准号", "提出部门/人员", "编制部门/人员", "编辑背景和文件内容简要陈述", "编写人", "编写时间"]

      all.each do |doc|
        csv << attributes.map{ |attr| doc.send(attr) }
      end
    end
  end

# documents_controller.rb
    def export
      @docs = Document.all
      send_data @docs.to_csv, filename: "docs-#{Date.today}.csv"
    end

# generate polymorphic references with index
rails generate model product supplier:references{polymorphic}:index
